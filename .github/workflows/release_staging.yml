name: Deriv App Staging Workflow
on:
  push:
    branches:
    - master

jobs:
  build_test_and_publish:
    name: Build, Test and Publish to Cloudflare Staging 
    runs-on: Runner_16cores_Deriv-app
    environment: Staging
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node
      uses: "./.github/actions/setup_node"
    - name: Install Dependencies
      uses: "./.github/actions/npm_install_from_cache"
    - name: Build
      uses: "./.github/actions/build"
      with:
        NODE_ENV: staging
        DATADOG_APPLICATION_ID: ${{ vars.DATADOG_APPLICATION_ID }} 
        DATADOG_CLIENT_TOKEN: ${{ vars.DATADOG_CLIENT_TOKEN }}
        DATADOG_CLIENT_TOKEN_LOGS: ${{ vars.DATADOG_CLIENT_TOKEN_LOGS }}
        DATADOG_SESSION_REPLAY_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_REPLAY_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE: ${{ vars.DATADOG_SESSION_SAMPLE_RATE }}
        DATADOG_SESSION_SAMPLE_RATE_LOGS: ${{ vars.DATADOG_SESSION_SAMPLE_RATE_LOGS }}
        GD_API_KEY: ${{ secrets.GD_API_KEY }}
        GD_APP_ID: ${{ secrets.GD_APP_ID }}
        GD_CLIENT_ID: ${{ secrets.GD_CLIENT_ID }}
        RUDDERSTACK_STAGING_KEY: ${{ vars.RUDDERSTACK_STAGING_KEY }}
        RUDDERSTACK_URL: ${{ vars.RUDDERSTACK_URL }}
    - name: Run tests
      run: npm test
    - name: Versioning
      uses: "./.github/actions/versioning"
      with:
        version_name: staging
    - name: Publish to Cloudflare Pages Staging 
      uses: "./.github/actions/publish_to_pages_staging"
      with:       
        version: $(echo cat packages/core/dist/version | bash)
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}


  send_slack_notification:
      name: Send Slack notification
      environment: Staging
      runs-on: Runner_16cores_Deriv-app
      if: always()
      needs: [build_test_and_publish]
      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Conclusion
        uses: technote-space/workflow-conclusion-action@v3
      - name: Send Slack Notification
        uses: "./.github/actions/send_slack_notifications"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production 
          version: $(echo cat packages/core/dist/version | bash)
